//Convert LaoKa word to Lao word
int ConvertLaoKaToLaoUnicode(WPARAM value[])
{		
	//0=LAOKA_UNICODE_FONT_INDEX;
	//get length of LaoKa non contained backspace char
	int _countSign=_Count-1;
	//Mark sign should be @ the end char of a word or before the end char of word 1 char
	for(int i=0;i<2;i++)
	{
		//if marksign stay @ the end char of word and there are only 2 chars of LaoKa word
		if(_countSign==1&&IsMarkSign(value[1]))
		{
			_MarkSign=GetMarkSign(value[1],LAOKA_UNICODE_FONT_INDEX);
			value[1]=0;
			_Count--;
			break;
		}
		//find the mark sing in the lao ka word, when the laoka word's length >2
		if(IsMarkSign(value[_countSign-i])&&_countSign>1)
		{			
			//Get Marksign
			_MarkSign=GetMarkSign(value[_countSign-i],LAOKA_UNICODE_FONT_INDEX);			
			//kick the mark sign of the laoka word out by reverse the next value with marksign
			value[_countSign-i]=value[_countSign];				
			//then set value of end char of the laoka word =default value
			value[_countSign]=0;
			_Count--;
			break;
		}	
	}	
	for(int i=0;i<_Count;i++)
	{
		switch(value[i])
		{		
			//Multi Consonant case
			//lvl1
			//F 
			case 'F':
				{
					//FH
					//lvl2
					if(value[i+1]=='H')	
					{//Insert marksign									
						Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_FH]; // = Lao[mode][Lao_FH]
						if(value[i+2]==0)
						InsertMarkSign();
						i++;
					}
					//F
					else 
					{//insert marksighn
						Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_F];
						if(value[i+1]==0)
						InsertMarkSign();
					}
					Re_Index++;
				}
				break;
			//lvl1
			//H 
			case 'H':
				{
					//HH
					//lvl2
					//Rule1
					if(value[i+1]=='H')	
					{
						//HHL
						//lvl3
						if(value[i+2]=='L')
						{//insert marksign
							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_HH];							
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf__L];
							if(value[i+3]==0)
							InsertMarkSign();
							i++;
						}
						//HHM
						else if(value[i+2]=='M')
						{							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_HM];
							if(value[i+3]==0)
							InsertMarkSign();
							i++;
						}
						//HHN
						else if(value[i+2]=='N')
						{
							//HHNG
							//lvl4
							if(value[i+3]=='G')
							{
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_HH];
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NG];	
								if(value[i+4]==0)
								InsertMarkSign();
								i++;
							}
							//HHNH
							else if(value[i+3]=='H')
							{
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_HH];
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NH];
								if(value[i+4]==0)
								InsertMarkSign();
								i++;
							}
							//HHN
							else 
							{
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_HN];
								if(value[i+3]==0)
								InsertMarkSign();
							}
							i++;
						}
						//HHV
						else if(value[i+2]=='V')
						{//Insert Mark sign
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_HH];							
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_V];
							if(value[i+3]==0)
							InsertMarkSign();
							i++;
						}
						//HH
						else
						{							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_HH];
							if(value[i+2]==0)
							InsertMarkSign();
						}						
						i++;						
					}
					//HL
					//Rule2
					else if(value[i+1]=='L'&&_IsRule2)
						{
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_HH];
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf__L];
							if(value[i+2]==0)
							InsertMarkSign();
							i++;
						}
					//HM
					else if(value[i+1]=='M'&&_IsRule2)
						{
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_HM];
							if(value[i+2]==0)
							InsertMarkSign();
							i++;
						}
					//HN case for rule2 only
					else if(value[i+1]=='N'&&_IsRule2)
						{
							//NHG
							//lvl4
							if(value[i+2]=='G')
							{
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_HH];								
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NG];
								if(value[i+3]==0)
								InsertMarkSign();
								i++;
							}
							//HNH
							else if(value[i+2]=='H')
							{
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_HH];
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NH];
								if(value[i+3]==0)
								InsertMarkSign();
								i++;
							}
							//HN
							else 
							{							
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_HN];
								if(value[i+2]==0)
								InsertMarkSign();								
							}
							i++;
						}
					//HV it could confuse use between
					//HHV and H+V
					//to type H+V , first user have to release H and then release the next one

					else if(value[i+1]=='V'&&_IsRule2&&_UseHV)
						{
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_HH];
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_V];
							if(value[i+2]==0)
							InsertMarkSign();
							i++;
						}
					//H
					else 
					{
						Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_H];
						if(value[i+1]==0)
						InsertMarkSign();
					}
					Re_Index++;
				}
			break;
			//lvl1
			//K 
			case 'K':
				{
					//KH
					//lvl2
					if(value[i+1]=='H')
					{
						Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_KH];
						if(value[i+2]==0)
						InsertMarkSign();
						i++;
					}
					//K
					else
					{
						Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_K];
						if(value[i+1]==0)
						InsertMarkSign();
					}
					Re_Index++;
				}
			break;
			//lvl1
			//N case
			case 'N':
				{
					//NH
					//lvl2
					if(value[i+1]=='H')
					{
						Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NH];
						if(value[i+2]==0)
						InsertMarkSign();
						i++;
					}
					//NG
					else if(value[i+1]=='G')
					{
						Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NG];
						if(value[i+2]==0)
						InsertMarkSign();
						i++;
					}
					//N
					else
					{
						Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_N];
						if(value[i+1]==0)
						InsertMarkSign();
					}
					Re_Index++;
				}
			break;			
			//P
			//lvl1
			case 'P':
				{
					// MarkSign redundent
					if(i>0&&IsOtherSign(value[i]))
					{
						Re_LaoKa[Re_Index]=GetExtraMarkSign(value[i],LAOKA_UNICODE_FONT_INDEX);
					}					
					else
					{	//PH
						//lvl2
						if(value[i+1]=='H')
						{
							//PHH
							//lvl3
							if(value[i+2]=='H')
							{
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_PHH];
								if(value[i+3]==0)
								InsertMarkSign();
								i++;
							}	
							//PH
							else
							{
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_PH];	
								if(value[i+2]==0)
								InsertMarkSign();
							}
							i++;
						}		
						//P
						else
						{
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_P];
							if(value[i+1]==0)
							InsertMarkSign();
						}
					}
					Re_Index++;
				}
			break;
			//T
			//lvl1
			case 'T':
				{
					//TH
					//lvl2
					if(value[i+1]=='H')
					{
						//THH
						if(value[i+2]=='H')
						{
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_THH];
							if(value[i+3]==0)
							InsertMarkSign();
							i++;
						}
						//TH
						else
						{
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_TH];
							if(value[i+2]==0)
							InsertMarkSign();
						}
						i++;
					}
					//T
					else
					{
						Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_T];
						if(value[i+1]==0)
						InsertMarkSign();
					}
					Re_Index++;
				}
			break;
			//Single Consonant case
			//G
			case 'G':
				{
					Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_G];
					if(value[i+1]==0)
					InsertMarkSign();
					Re_Index++;
				}
			break;
			//J
			case 'J':
				{
					Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_J];
					if(value[i+1]==0)
					InsertMarkSign();
					Re_Index++;
				}
			break;
			//S
			case 'S':
				{
					Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_S];
					if(value[i+1]==0)
					InsertMarkSign();
					Re_Index++;
				}
			break;
			//C
			case 'C':
				{
					Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_C];
					if(value[i+1]==0)
					InsertMarkSign();
					Re_Index++;
				}
			break;
			//D
			case 'D':
				{
					Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_D];
					if(value[i+1]==0)
					InsertMarkSign();
					Re_Index++;
				}
			break;
			//B
			case 'B':
				{
					Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_B];
					if(value[i+1]==0)
					InsertMarkSign();
					Re_Index++;
				}
			break;
			//M
			case 'M':
				{
					Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_M];
					if(value[i+1]==0)
					InsertMarkSign();
					Re_Index++;
				}
			break;
			//Y
			case 'Y':
				{
					Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_Y];
					if(value[i+1]==0)
					InsertMarkSign();
					Re_Index++;
				}
			break;
			//L
			case 'L':
				{
					//Convert to marksign when front char is consonant
					if(i==_Count-1&&_Count>1)
					{
						Re_LaoKa[Re_Index]=GetExtraMarkSign(value[i],LAOKA_UNICODE_FONT_INDEX);
					}
					else
					{
						Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_L];
						if(value[i+1]==0)
						InsertMarkSign();
					}
					Re_Index++;
				}
			break;
			//V
			case 'V':
				{	
					//IT'S THE CONSONANT
					if(value[i+1]==0)
					{					
						Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_V];
						InsertMarkSign();
					}
					//IT'S THE ENHANCE CONSONANT
					else if(IsConsonant(value[i-1])&&!IsConsonant(value[i+1]))
					{												
						Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_V];
					}
					//IT'S THE VOWEL
					else 
					{
						//Re_Index--;
						InsertMarkSign();
						Re_Index++;
						Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_V];
					}
					Re_Index++;
				}
			break;
			//R
			case 'R':
				{					
					Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_R];
					if(value[i+1]==0)
						InsertMarkSign();
					Re_Index++;
				}
			break;
			//Vowel case
			//lvl1
			//A
			case 'A':
				{							
					//lvl2
					//AA
					if(value[i+1]=='A')
					{
						//AAY
						if(value[i+2]=='Y')
						{
							//OHAAY
							if(i==0&&_IsRule2)
							{//Rule2																								
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];
								Re_Index++;	
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AAY];
								TakeVowelToFrontOfWord(Re_Index);
								InsertMarkSign(); 
							}
							//x+AAY || AAY+x
							else if(i==0&&_UseExtraSign)
							{
								VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);								
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AAY];
								TakeVowelToFrontOfWord(Re_Index);
								InsertMarkSign(); 
							}
							//AAY
							else
							{//Rule1														
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AAY];
								TakeVowelToFrontOfWord(Re_Index);
								InsertMarkSign(); 
							}
							i++;
						}			
						//AY
						else 
						{
							//OHAA
							if(i==0&&_IsRule2)
							{//Rule2							
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];
								InsertMarkSign();
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AA];
							}
							//x+AA
							else if(i==0&&_UseExtraSign)
							{
								VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);
								InsertMarkSign();
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AA];
								TakeVowelToFrontOfWord(Re_Index);
							}
							//AA
							else
							{//Rule1					
								InsertMarkSign(); 
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AA];								
							}
						}
						i++;
					}			
					//E
					else if(value[i+1]=='E')
					{
						//OHAE
						if(i==0&&_IsRule2)
						{//Rule2				
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];							
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AE];
							InsertMarkSign(); 
						}
						//x+AE
						else if(i==0&&_UseExtraSign)
							{
								VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);								
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AE];
								InsertMarkSign(); 
							}
						//AE
						else
						{//Rule1
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AE];
							InsertMarkSign(); 
						}
						i++;
					}
					//**********   Rule 2+
					//AI
					else if(value[i+1]=='I'&&_IsRule2)
					{
						//OHAANH
						if(i==0)
						{//Vowel stand alone				
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];
							InsertMarkSign();
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AA];
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NH];
						}
						//AANH
						else
						{
							InsertMarkSign(); 
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AA];
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NH];
						}
						i++;	
					}
					//O
					else if(value[i+1]=='O'&&_IsRule2)
					{
						//OHAAV
						if(i==0)
						{//Vowel stand alone				
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];
							InsertMarkSign();
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AA];
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_V];
						}
						//AAV
						else
						{
							InsertMarkSign(); 
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AA];
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_V];
						}
						i++;
					}
					// ******
					//AU
					else if(value[i+1]=='U')
					{
						//OHEOOAA
						if(i==0&&_IsRule2)
						{//Vowel stand alone				
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];							
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];								
							TakeVowelToFrontOfWord(Re_Index);
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OO];
							InsertMarkSign(); 
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AA];								
						}
						//x+EOOAA
						else if(i==0&&_UseExtraSign)
						{
							VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];														
							TakeVowelToFrontOfWord(Re_Index);
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OO];
							InsertMarkSign(); 
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AA];								
						}
						//EOOAA
						else
						{
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];														
							TakeVowelToFrontOfWord(Re_Index);
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OO];
							InsertMarkSign(); 
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AA];																					
						}
						i++;
					}
					//AW
					else if(value[i+1]=='W')
					{
						//OHAW
						if(i==0&&_IsRule2)
						{//Vowel stand alone				
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];
							//
							InsertMarkSign();
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AW];							
							//Re_Index++;
							//Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AA];
							//Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AW];							
						}
						//x+AW
						else if(i==0&&_UseExtraSign)
						{
							VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);							
							//
							InsertMarkSign();
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AW];							
							//Re_Index++;
							//Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AA];
							//Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AW];		
						}
						//AW
						else
						{
							Re_Index--;
							InsertMarkSign();
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AW];
							
							//
							//Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AA];
							//Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AW];							
						}
						i++;
					}
					//AY
					else if(value[i+1]=='Y')
					{
						//OHAY ||AYOH
						if(i==0&&_IsRule2)
						{//Rule2							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AY];
							TakeVowelToFrontOfWord(Re_Index);
							InsertMarkSign(); 
						}
						//condition when vowel is stand alone!
						//x+AY || AY+x
						else if(i==0&&_UseExtraSign)
							{
								VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);								
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AY];
								TakeVowelToFrontOfWord(Re_Index);
								InsertMarkSign(); 
							}
						//AY
						else
						{//Rule1							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AY];							
							TakeVowelToFrontOfWord(Re_Index);
							InsertMarkSign(); 

						}
						i++;
					}	
					// when the char after the A  is consonant type
					// whe use rule 2 let user can type faster!
					//A*
					else if(IsConsonant(value[i+1])&&_IsRule2&&value[i+1]!=0&&!IsMarkSign(value[i+1])&&!IsOtherSign(value[i+1]))
					{
						//OHAA
						if(i==0)
						{				
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];
							InsertMarkSign(); 
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AA];
						}
						//AA
						else
						{			
							InsertMarkSign();
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AA];
						}
					}
					//A
					else
					{
						//OHA
						if(i==0&&_IsRule2)
						{//Rule2				
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];
							InsertMarkSign(); 
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_A];
						}
						//x+A
						else if(i==0&&_UseExtraSign)
							{
								VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);
								InsertMarkSign();
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_A];								
							}
						//A
						else
						{//Rule1
							InsertMarkSign();			
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_A];
							
						}
					}
					Re_Index++;
				}
			break;
			//E
			case 'E':
				{
					//EE
					if(value[i+1]=='E')
					{
						//EEOH  || OHEE
						if(i==0&&_IsRule2)
						{//Rule2														
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_EE];
							TakeVowelToFrontOfWord(Re_Index);
							//????
							if(!IsAbovedVowel(value[i+2],value[i+3]))
								InsertMarkSign();
						}
						//x+EE || EE+x
						else if(i==0&&_UseExtraSign)
						{
							VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);								
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_EE];
							TakeVowelToFrontOfWord(Re_Index);
							if(!IsAbovedVowel(value[i+2],value[i+3]))
							InsertMarkSign();
						}
						//EE
						else
						{//Rule1							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_EE];
							TakeVowelToFrontOfWord(Re_Index);
							if(!IsAbovedVowel(value[i+2],value[i+3]))
								InsertMarkSign();
						}
						i++;
					}	
					//NENGVANG DEFINITION
					if(value[i+1]=='R')
					{
						//EOHI  || OHEI || OHER
						if(i==0&&_IsRule2)
						{//Rule2														
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_I];
							TakeVowelToFrontOfWord(Re_Index);
							//????
							if(!IsAbovedVowel(value[i+2],value[i+3]))
								InsertMarkSign();
						}
						//x+EE || EE+x ||x+ER
						else if(i==0&&_UseExtraSign)
						{
							VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);								
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_I];
							TakeVowelToFrontOfWord(Re_Index);
							if(!IsAbovedVowel(value[i+2],value[i+3]))
							InsertMarkSign();
						}
						//EE
						else
						{//Rule1							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_I];
							TakeVowelToFrontOfWord(Re_Index);
							if(!IsAbovedVowel(value[i+2],value[i+3]))
								InsertMarkSign();
						}
						i++;
					}	
					/*END NENGVANG DEFINITION*/
					//EW
					else if(value[i+1]=='W')					
					{
						//EWW
						if(value[i+2]=='W')
						{
							//OHEWWOH || EOHWWOH
							if(i==0&&_IsRule2)
							{//Rule2															
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];								
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
								TakeVowelToFrontOfWord(Re_Index);
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_WW];
								InsertMarkSign();
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];
							//	_Count++;
							}
							//x+EWWOH || E+x+WWOH
							else if(i==0&&_UseExtraSign)
							{
								VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);								
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
								TakeVowelToFrontOfWord(Re_Index);
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_WW];
								InsertMarkSign();
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];
								//_Count++;
							}
							//EWW
							else
							{//Rule1	
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
								TakeVowelToFrontOfWord(Re_Index);
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_WW];
								InsertMarkSign();
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];
							}
							i++;
						}
						//EW
						else
						{
							//EWOH
							if(i==0&&_IsRule2)
							{//Rule2															
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];								
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
								TakeVowelToFrontOfWord(Re_Index);
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_W];
								InsertMarkSign();
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];
								//_Count++;
							}
							//x+EWOH || E+x+WOH
							else if(i==0&&_UseExtraSign)
							{
								VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);								
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
								TakeVowelToFrontOfWord(Re_Index);
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_W];
								InsertMarkSign();
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];
								//_Count++;
							}
							//EW
							else
							{//Rule1	
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
								TakeVowelToFrontOfWord(Re_Index);
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_W];
								InsertMarkSign();
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];
							}
						}
						i++;
					}
					//EO
					else if(value[i+1]=='O'&&_IsRule2)
					{ 
						//OHEEV ||EEOHV
						if(i==0)
						{//Rule2																	
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];							
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_EE];
							TakeVowelToFrontOfWord(Re_Index);
							InsertMarkSign();
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_V];

						}
						//x+EEV || EE+x+V
						else if(i==0&&_UseExtraSign)
						{
							VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);							
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_EE];
							TakeVowelToFrontOfWord(Re_Index);
							InsertMarkSign();
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_V];
						}
						//EEV
						else
						{			
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_EE];
							TakeVowelToFrontOfWord(Re_Index);
							InsertMarkSign();
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_V];
						}
						i++;
					}
					//E
					else
					{ 
						//OHE ||EOH
						if(i==0&&_IsRule2)
						{//Rule2											
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];							
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
							TakeVowelToFrontOfWord(Re_Index);
							if(!IsAbovedVowel(value[i+1],value[i+2]))
							InsertMarkSign();
						}
						//x+E || E+x
						else if(i==0&&_UseExtraSign)
						{
							VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);							
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
							TakeVowelToFrontOfWord(Re_Index);
							if(!IsAbovedVowel(value[i+1],value[i+2]))
							InsertMarkSign();
						}
						//E
						else
						{//Rule1			
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
							TakeVowelToFrontOfWord(Re_Index);
							if(!IsAbovedVowel(value[i+1],value[i+2]))
							InsertMarkSign();
						}
					}
					Re_Index++;
				}
			break;
			//I
			//lvl1
			case 'I':
				{	
					//IA
					if(value[i+1]=='A')
					{
						//IAA
						if(value[i+2]=='A')
						{
							//EOHAENH ||OHEAENH
							if(i==0&&_IsRule2)
							{//Rule2															
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];								
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
								TakeVowelToFrontOfWord(Re_Index);
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AE];
								InsertMarkSign();
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NH];
							}
							//x+EAENH || E+x+AENH
							else if(i==0&&_UseExtraSign)
							{
								VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);								
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
								TakeVowelToFrontOfWord(Re_Index);
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AE];
								InsertMarkSign();
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NH];
							}
							//EAENH
							else
							{//Rule1	
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
								TakeVowelToFrontOfWord(Re_Index);
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AE];
								InsertMarkSign();
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NH];
							}
							i++;
						}
						//IA
						else
						{
							//EOHAENH ||OHEAENH
							if(i==0&&_IsRule2)
							{//Rule2															
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];								
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
								TakeVowelToFrontOfWord(Re_Index);
								InsertMarkSign();
								Re_Index++;								
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NH];
								//_Count++;
							}
							//x+EAENH || E+x+AENH
							else if(i==0&&_UseExtraSign)
							{
								VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);								
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
								TakeVowelToFrontOfWord(Re_Index);
								InsertMarkSign();
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NH];
								//_Count++;
							}
							//EAENH
							else
							{//Rule1	
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
								TakeVowelToFrontOfWord(Re_Index);
								InsertMarkSign();
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NH];
							}
						}
						i++;
					}
					//II
					//lvl2
					else if(value[i+1]=='I')
					{
						//OHII
						if(i==0&&_IsRule2)
						{//Rule2
							//Lao Unicode Font
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];							
							Re_Index++;				
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_II];
							InsertMarkSign();
						}
						//x+II
						else if(i==0&&_UseExtraSign)
							{
								VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);								
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_II];	
								InsertMarkSign();
							}
						//II
						else
						{//Rule1
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_II];
							InsertMarkSign();
						}						
						i++;
					}
					//I
					else
					{			
						//OHI
						if(i==0&&_IsRule2)
						{//Rule2	
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];							
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_I];
							InsertMarkSign();
						}
						//x+I
						else if(i==0&&_UseExtraSign)
							{
								VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);							
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_I];
								InsertMarkSign();
							}
						//I
						else
						{//Rule1
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_I];
							InsertMarkSign();
						}									
					}
					Re_Index++;
				}
			break;
			//O
			case 'O':
				{
					//OA
					if(value[i+1]=='A')
					{
						//OHEAAA || EOHAAA
						if(i==0&&_IsRule2)
						{	
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];							
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
							TakeVowelToFrontOfWord(Re_Index);
							InsertMarkSign();
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AA];
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_A];														
						}
						//x+EAAA || E+x+AAA
						else if(i==0&&_UseExtraSign)
						{
							VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);							
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
							TakeVowelToFrontOfWord(Re_Index);
							InsertMarkSign();
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AA];
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_A];							
						}		
						//EAAA
						else
						{
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_E];
							TakeVowelToFrontOfWord(Re_Index);
							InsertMarkSign();
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_AA];
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_A];
						}
						i++;
					}
					//OH
					else if(value[i+1]=='H')
					{						
						Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];
						if(IsConsonant(value[i+2])||value[i+2]==0)
							InsertMarkSign();
						i++;
					}
					//OI
					//OHNH
					else if(value[i+1]=='I'&&_IsRule2)
					{
						//OHNH 
						if(i==0)
						{	
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];
							InsertMarkSign();
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];							
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NH];																					
						}	
						//OHNH
						else
						{
							InsertMarkSign();
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];								
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NH];
						}
						i++;
					}
					//OO
					else if(value[i+1]=='O')
					{
						//OHOO 
						if(i==0&&_IsRule2)
						{	
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];							
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OO];
							InsertMarkSign();
						}
						//x+OHOO
						else if(i==0&&_UseExtraSign)
						{
							VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);							
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OO];	
							InsertMarkSign();
						}		
						//OO
						else
						{
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OO];
							InsertMarkSign();
						}
						i++;
					}
					//OW
					else if(value[i+1]=='W')
					{
						//OHOW
						if(i==0&&_IsRule2)
						{	
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];						
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OW];
							TakeVowelToFrontOfWord(Re_Index);
							InsertMarkSign();
						}
						//x+OHOW
						else if(i==0&&_UseExtraSign)
						{
							VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);							
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];							
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OW];						
							TakeVowelToFrontOfWord(Re_Index);
							InsertMarkSign();
						}		
						//OW
						else
						{													
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OW];
							TakeVowelToFrontOfWord(Re_Index);
							InsertMarkSign();
						}
						i++;
					}	
					//OY
					else if(value[i+1]=='Y'&&_IsRule2)
					{
						//OHOW
						if(i==0)
						{	
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];							
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OW];
							TakeVowelToFrontOfWord(Re_Index);
							InsertMarkSign();
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NH];
						}													
						//OWNH
						else
						{													
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OW];
							TakeVowelToFrontOfWord(Re_Index);
							InsertMarkSign();
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NH];
							
						}
						i++;
					}
					//O
					else
					{
						//Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_O];	
						if(IsConsonant(value[i+1])&&value[i+1]!=0)
						{							
							//OHOH
							if(i==0&&_IsRule2)
							{
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];								
								InsertMarkSign();
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];								
							}
							//OH
							else
							{
								InsertMarkSign();
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];								
							}
						}
						else
						{
							//OHO
							if(i==0&&_IsRule2)
							{	
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];	
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_O];									
								InsertMarkSign();
							}
							//x+OHO
							else if(i==0&&_UseExtraSign)
							{
								VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);			
								Re_Index++;
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_O];						
								InsertMarkSign();
							}		
							//O
							else
							{
								Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_O];		
								InsertMarkSign();
							}
						}
					}
					Re_Index++;
				}
			break;
			//lvl1
			//U
			case 'U':
				{
					//LVL2
					//UA
					if(value[i+1]=='A')
					{
							//OHUA
						if(i==0&&_IsRule2)
						{	
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];							
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OO];
							InsertMarkSign();
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_V];								
						}
						//x+UA
						else if(i==0&&_UseExtraSign)
						{
							VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);							
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OO];
							InsertMarkSign();
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_V];								
						}		
						//UA
						else
						{
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OO];
							InsertMarkSign();
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_V];								
						}
						i++;
					}					
					//UU
					//lvl2
					else if(value[i+1]=='U')
					{
						//OHUU
						if(i==0&&_IsRule2)
						{	
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];							
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_UU];
							InsertMarkSign();
						}
						//x+UU
						else if(i==0&&_UseExtraSign)
						{
							VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_UU];
							InsertMarkSign();
						}		
						//UU
						else
						{
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_UU];
							InsertMarkSign();
						}
						i++;
					}
					//UI
					//UNH
					else if(value[i+1]=='I'&&_IsRule2)
					{
						//OHUNH
						if(i==0)
						{	
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];							
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_U];
							InsertMarkSign();
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NH];
						}
						//UNH
						else
						{
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_U];
							InsertMarkSign();
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NH];
						}		
						i++;
					}
					//UY
					//UUNH
					else if(value[i+1]=='Y'&&_IsRule2)
					{
						//OHUUNH
						if(i==0)
						{	
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];							
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_UU];
							InsertMarkSign();
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NH];
						}
						//UUNH
						else
						{
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_UU];
							InsertMarkSign();
							Re_Index++;
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_NH];
						}		
						i++;
					}
					else
					{
						//OHU
						if(i==0&&_IsRule2)
						{	
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];							
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_U];
							InsertMarkSign();
						}
						//x+U
						else if(i==0&&_UseExtraSign)
						{
							VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_U];
							InsertMarkSign();							
						}		
						//U
						else
						{
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_U];
							InsertMarkSign();
						}
					}
					Re_Index++;
				}
			break;
			//lvl1
			case 'W':
				{
					//lvl2
					if(value[i+1]=='W')
					{
						//OHWW
						if(i==0&&_IsRule2)
						{	
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];							
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_WW];
							InsertMarkSign();
						}
						//x+WW
						else if(i==0&&_UseExtraSign)
						{
							VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_WW];
							InsertMarkSign();
						}		
						//WW
						else
						{
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_WW];
							InsertMarkSign();
						}
						i++;
					}
					else
					{
						//OHWW
						if(i==0&&_IsRule2)
						{	
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_OH];							
							Re_Index++;							
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_W];
							InsertMarkSign();
						}
						//x+WW
						else if(i==0&&_UseExtraSign)
						{
							VowelStayAtFirstRule1(i,LAOKA_UNICODE_FONT_INDEX);
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_W];
							InsertMarkSign();
						}		
						//WW
						else
						{
							Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_W];
							InsertMarkSign();
						}
					}
					Re_Index++;
				}
				break;
			//Q
			case 'Q':
				{
					InsertMarkSign();
					Re_Index++;
					Re_LaoKa[Re_Index]=(WPARAM)LAOKA_CHAR_VALUE[LAOKA_UNICODE_FONT_INDEX][LaoKa_Char_IndexOf_Q];
					Re_Index++;					
				}
				break;				
		}
	}
	_MarkSign=0;
	return 0;
}